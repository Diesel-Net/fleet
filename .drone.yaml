---
kind: pipeline
type: docker
name: swarm bootstrap

clone:
  depth: 1

steps:

  - name: deploy
    image: plugins/ansible:3
    environment:
      ANSIBLE_CONFIG: .ansible/ansible.cfg
      SUPER_USER:
        from_secret: super_user
      SUPER_PASS:
        from_secret: super_pass
    settings:
      requirements: .ansible/files/requirements.txt
      galaxy: .ansible/roles/requirements.yaml
      playbook: .ansible/deploy.yaml
      private_key:
        from_secret: automation_id_rsa
      vault_password:
        from_secret: ansible_vault_password 
    commands:
      # dynamically select inventory based on Git branch/tag
      - version=$DRONE_BRANCH
      - if [ ! -z $DRONE_TAG ]; then version=production; fi
      - /bin/drone-ansible --inventory .ansible/inventory/$$version/hosts

trigger:
  branch:
    - development
    - stable
  event:
    - push
    - tag

---

kind: pipeline
type: docker
name: daily maintenance

clone:
  depth: 1

steps:
  - name: update dev
    image: plugins/ansible:3
    environment:
      ANSIBLE_CONFIG: .ansible/ansible.cfg
    settings:
      galaxy: .ansible/roles/requirements.yaml
      playbook: .ansible/update.yaml
      inventory: .ansible/inventory/development
      private_key:
        from_secret: automation_id_rsa
      vault_password:
        from_secret: ansible_vault_password

  - name: update test
    image: plugins/ansible:3
    environment:
      ANSIBLE_CONFIG: .ansible/ansible.cfg
    settings:
      galaxy: .ansible/roles/requirements.yaml
      playbook: .ansible/update.yaml
      inventory: .ansible/inventory/stable
      private_key:
        from_secret: automation_id_rsa
      vault_password:
        from_secret: ansible_vault_password

  - name: update prod
    image: plugins/ansible:3
    environment:
      ANSIBLE_CONFIG: .ansible/ansible.cfg
    settings:
      galaxy: .ansible/roles/requirements.yaml
      playbook: .ansible/update.yaml
      inventory: .ansible/inventory/production
      private_key:
        from_secret: automation_id_rsa
      vault_password:
        from_secret: ansible_vault_password

trigger:
  event:
    - cron
  cron:
    - daily_maintenance

---

kind: pipeline
type: docker
name: weekly maintenance

clone:
  depth: 1

steps:
  - name: update dev
    image: plugins/ansible:3
    environment:
      ANSIBLE_CONFIG: .ansible/ansible.cfg
    settings:
      galaxy: .ansible/roles/requirements.yaml
      playbook: .ansible/clean.yaml
      inventory: .ansible/inventory/development
      private_key:
        from_secret: automation_id_rsa
      vault_password:
        from_secret: ansible_vault_password

  - name: update test
    image: plugins/ansible:3
    environment:
      ANSIBLE_CONFIG: .ansible/ansible.cfg
    settings:
      galaxy: .ansible/roles/requirements.yaml
      playbook: .ansible/clean.yaml
      inventory: .ansible/inventory/stable
      private_key:
        from_secret: automation_id_rsa
      vault_password:
        from_secret: ansible_vault_password

  - name: update prod
    image: plugins/ansible:3
    environment:
      ANSIBLE_CONFIG: .ansible/ansible.cfg
    settings:
      galaxy: .ansible/roles/requirements.yaml
      playbook: .ansible/clean.yaml
      inventory: .ansible/inventory/production
      private_key:
        from_secret: automation_id_rsa
      vault_password:
        from_secret: ansible_vault_password

trigger:
  event:
    - cron
  cron:
    - weekly_maintenance
